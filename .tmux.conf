#bind-key [-cnr] [-t mode-table] [-T key-table] key command [arguments]
#              (alias: bind)
#        Bind key key to command.  Keys are bound in a key table.  By default (without -T), the key is bound in the prefix key table.  This table is used for keys pressed after the prefix key (for example, by default ‘c’ is bound
#        to new-window in the prefix table, so ‘C-b c’ creates a new window).  The root table is used for keys pressed without the prefix key: binding ‘c’ to new-window in the root table (not recommended) means a plain ‘c’ will
#        create a new window.  -n is an alias for -T root.  Keys may also be bound in custom key tables and the switch-client -T command used to switch to them from a key binding.  The -r flag indicates this key may repeat, see
#        the repeat-time option.
#
#        If -t is present, key is bound in mode-table: the binding for command mode with -c or for normal mode without.  See the WINDOWS AND PANES section and the list-keys command for information on mode key bindings.
#
#        To view the default bindings and possible commands, see the list-keys command.


#       Curse terminals - only can send 0x50-0x5F characters with control because it is using first 32
#       control codes available in ASCII (0x00-0x1F) to deliver.
#       Oct   Dec   Hex   Char                        Oct   Dec   Hex   Char
#       ────────────────────────────────────────────────────────────────────────
#       000   0     00    NUL '\0' (null character)   100   64    40    @
#       001   1     01    SOH (start of heading)      101   65    41    A
#       002   2     02    STX (start of text)         102   66    42    B
#       003   3     03    ETX (end of text)           103   67    43    C
#       004   4     04    EOT (end of transmission)   104   68    44    D
#       005   5     05    ENQ (enquiry)               105   69    45    E
#       006   6     06    ACK (acknowledge)           106   70    46    F
#       007   7     07    BEL '\a' (bell)             107   71    47    G
#       010   8     08    BS  '\b' (backspace)        110   72    48    H
#       011   9     09    HT  '\t' (horizontal tab)   111   73    49    I
#       012   10    0A    LF  '\n' (new line)         112   74    4A    J
#       013   11    0B    VT  '\v' (vertical tab)     113   75    4B    K
#       014   12    0C    FF  '\f' (form feed)        114   76    4C    L
#       015   13    0D    CR  '\r' (carriage ret)     115   77    4D    M
#       016   14    0E    SO  (shift out)             116   78    4E    N
#       017   15    0F    SI  (shift in)              117   79    4F    O
#       020   16    10    DLE (data link escape)      120   80    50    P
#       021   17    11    DC1 (device control 1)      121   81    51    Q
#       022   18    12    DC2 (device control 2)      122   82    52    R
#       023   19    13    DC3 (device control 3)      123   83    53    S
#       024   20    14    DC4 (device control 4)      124   84    54    T
#       025   21    15    NAK (negative ack.)         125   85    55    U
#       026   22    16    SYN (synchronous idle)      126   86    56    V
#       027   23    17    ETB (end of trans. blk)     127   87    57    W
#       030   24    18    CAN (cancel)                130   88    58    X
#       031   25    19    EM  (end of medium)         131   89    59    Y
#       032   26    1A    SUB (substitute)            132   90    5A    Z
#       033   27    1B    ESC (escape)                133   91    5B    [
#       034   28    1C    FS  (file separator)        134   92    5C    \  '\\'
#       035   29    1D    GS  (group separator)       135   93    5D    ]
#       036   30    1E    RS  (record separator)      136   94    5E    ^
#       037   31    1F    US  (unit separator)        137   95    5F    _
#       040   32    20    SPACE                       140   96    60    `
###############################################################################
# Navigation bindings
###############################################################################
bind h select-pane -L # Select left pane
bind j select-pane -D # Select bottom pane
bind k select-pane -U # Select top pane
bind l select-pane -R # Select right pane

# Smart pane switching with awareness of Vim splits and fzf.
# See: https://github.com/christoomey/vim-tmux-navigator
not_tmux="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(g?(view|n?vim?x?)(diff)?|fzf)$'"
bind-key -n C-h if-shell "$not_tmux" "send-keys C-h" "select-pane -L" # Select left pane
bind-key -n C-j if-shell "$not_tmux" "send-keys C-j" "select-pane -D" # Select bottom pane
bind-key -n C-k if-shell "$not_tmux" "send-keys C-k" "select-pane -U" # Select top pane
bind-key -n C-l if-shell "$not_tmux" "send-keys C-l" "select-pane -R" # Select right pane

###############################################################################
# Spliting bindings
###############################################################################
unbind '\'
bind -n 'C-\' split-window -h -c '#{pane_current_path}'  # Split panes horizontal
unbind -
bind -n 'C-_' split-window -v -c '#{pane_current_path}'  # Split panes vertically

###############################################################################
# Resizing bindings
###############################################################################
bind -r C-_ resize-pane -D # Move pane border down
# Cannot bind `C-=` (see control codes above), however can
# unbind `=` and use it, no matter if Ctrl is pressed or not
unbind =
bind -r = resize-pane -U # Move pane border up
unbind ,
bind -r , resize-pane -L # Move pane border left
unbind .
bind -r . resize-pane -R # Move pane border right

# Alt-M: Zoom window in and out
# Ctrl-M = Enter
bind -n M-m resize-pane -Z

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Allow us to reload our Tmux configuration while using Tmux
bind e source-file ~/.tmux.conf \; display "Reloaded!"

# Disable confirmation
unbind x
bind r kill-pane
bind t kill-window

###############################################################################
# Copy-paste
###############################################################################
# Similar to https://github.com/tmux-plugins/tmux-yank
set -g status-keys vi
setw -g mode-keys vi
bind Escape copy-mode
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'V' send -X select-line
bind -T copy-mode-vi 'r' send -X rectangle-toggle
# bind -T copy-mode-vi 'a' send -X copy-pipe-and-cancel "xclip -in -selection clipboard"
# bind -T copy-mode-vi 'A' send -X copy-pipe-and-cancel "xclip -in -selection clipboard;tmux paste-buffer"
# bind a run-shell "tmux set-buffer \"$(xclip -out -selection clipboard)\";tmux paste-buffer"
# bind -n C-v run-shell "tmux set-buffer \"$(xclip -out -selection clipboard)\";tmux paste-buffer"
bind a run-shell "tmux set-buffer \"$(xsel -o --clipboard)\";tmux paste-buffer"
bind -n C-v run-shell "tmux set-buffer \"$(xsel -o --clipboard)\";tmux paste-buffer"
# Copy on mouse selection
# bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run "tmux save-buffer - | xclip -i -sel clipboard > /dev/null"
# Paste on mouse right click
bind -n MouseDown3Pane run-shell "tmux set-buffer \"$(xsel -o --clipboard)\";tmux paste-buffer"

###############################################################################
# General settings
###############################################################################

# Tmux 2.1 options
# set -g utf8
# set-window-option -g utf8 on

### Set the terminal type so colors get rendered correctly
### The Tmux FAQ explicitly advises against setting TERM to anything
### other than screen or screen-256color in your shell init file, so
### don't do it!
### https://unix.stackexchange.com/questions/1045/getting-256-colors-to-work-in-tmux
set -g default-terminal "screen-256color"

# C-/ doesn't exist but in many terminals it is the same as C-_
unbind C-b
set -g prefix 'C-a'

set-option -g history-limit 1000000
# command delay? We don't want that, make it short
set -sg escape-time 0

# Set the numbering of windows to go from 1 instead of 0 - silly programmers :|
set-option -g base-index 1
setw -g pane-base-index 1

# Controls if the unattached sessions must be kept alive, making sessions
# available for later use
set-option -g destroy-unattached off

set-option -g -q mouse on

###############################################################################
# Status bar settings
###############################################################################
set-option -g status on                # turn the status bar on
# Tmux 2.1 option
# set -g status-utf8 on                # set utf-8 for the status bar
set -g status-interval 2               # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity
# set-option -g status-position top    # position the status bar at top of screen

# Visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# set color for status bar
set-option -g status-bg colour235 #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr dim

# set window list colors - red for active and cyan for inactive
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg colour236
set-window-option -g window-status-attr dim

set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg colour236
set-window-option -g window-status-current-attr bright

set -g window-status-current-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/}):#W:#F'
set -g window-status-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/}):#W:#F'
set-option -g status-interval 1
set -g set-titles on
set -g set-titles-string '#S:#(pwd="#{pane_current_path}"; echo ${pwd####*/}):#W:#F'

# show host name and IP address on left side of status bar
set -g status-left-length 70
set -g status-left ""

# show session name, window & pane number, date and time on right side of
# status bar
set -g status-right-length 60
set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]:: %d %b %Y #[fg=green]:: %l:%M %p :: #(date -u | awk '{print $4}')::"

###############################################################################
# Plugins
###############################################################################
unbind f
set -g @fingers-key f
set -g @fingers-hint-format "#[fg=red,bold]%s"
# https://github.com/Morantron/tmux-fingers 0.8.0
run-shell ./.config/tmux/tmux-fingers/tmux-fingers.tmux

set -g @copy_mode_yank 'y'
set -g @copy_mode_yank_put 'Y'
set -g @yank_selection_mouse 'clipboard'
# https://github.com/tmux-plugins/tmux-yank v2.3.0
run-shell ./.config/tmux/tmux-yank/yank.tmux

# Set the current shell path as default Tmux shell
set-option -g default-shell ${SHELL}
# set-option -g default-command "reattach-to-user-namespace -l zsh"
